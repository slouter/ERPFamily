package com.devMikasa.Familia.controller;

import java.util.List;

import org.hibernate.sql.Update;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.devMikasa.Familia.models.entity.Usuarios;
import com.devMikasa.Familia.services.IUsuariosServices;

//@CrossOrigin(origins = {"http://localhost:4200"})
@RestController
@RequestMapping("/Usuarios")
public class UsuariosRestController {
	
	@Autowired
	private IUsuariosServices usuariosService;
	
	@GetMapping("/usuarios")
	public List<Usuarios> index(){
		return usuariosService.findAll();
	}
	
	@GetMapping("/usuarios/{id}")
	public Usuarios show(@PathVariable Long id) {
		return usuariosService.findById(id);
	}
	
	@PostMapping("/usuarios")
	@ResponseStatus(HttpStatus.CREATED)
	public Usuarios create(@RequestBody Usuarios usuarios) {
		return usuariosService.save(usuarios);
	}
	
	@PutMapping("/usuarios/{id}")
	@ResponseStatus(HttpStatus.CREATED)
	public Usuarios update(@RequestBody Usuarios usuarios, @PathVariable Long id) {
		Usuarios usuarioActual = usuariosService.findById(id);
		
		usuarioActual.setApellido(usuarios.getApellido());
		usuarioActual.setNombre(usuarios.getNombre());
		usuarioActual.setEdad(usuarios.getEdad());
		usuarioActual.setDni(usuarios.getDni());
		usuarioActual.setEmail(usuarios.getEmail());
		
		return usuariosService.save(usuarioActual);
		
	}
	
	@DeleteMapping("/usuarios/{id}")
	@ResponseStatus(HttpStatus.NO_CONTENT)
	public void delete(@PathVariable Long id) {
		usuariosService.delete(id);
	}
}
